2001-07-20 Kevin Vandersloot <kfv101@psu.edu>

	*favorites.c (create_tree): don't do g_list_copy.

2001-07-20 Kevin Vandersloot <kfv101@psu.edu>

	*proctable.c (get_info): convert the name to utf8 here and
	don't duplicate the string twice to fix a memory leak

2001-07-19 Kevin Vandersloot <kfv101@psu.edu>

	*proctable.c (refresh_list): remove the call to g_list_copy
	as it caused a crash. I need to understand GLists better.
	Fixes bug #57782

2001-07-18 Kevin Vandersloot <kfv101@psu.edu>

	*procdialogs.c: add preferences dialog.

	*procdialogs.c (create_renice_dialog): cosmetic improvements.
	I'm still not satisfied with this dialog.

2001-07-18 Kevin Vandersloot <kfv101@psu.edu>

	*proctable.c (proctable_get_value): use
	e_utf8_from_locale_string for the process name to properly
	display names in the tree. This generates a lot of warnings
	so I hope there is a better solution.

	*procman.h: add new config variable show_pretty_names
	to show the .desktop names

	*proctable.c (get_info): Get the pretty name if needed.

	*favorites.c (get_blacklist): remove an unessecary g_print.

2001-07-18 Kevin Vandersloot <kfv101@psu.edu>

	Create a hide message dialog similar to the end process one.

	*procdialogs.c: add the dialog in the same fashion as the end
	process one.

	*procman.[c,h]: add boolean to config show_hide_message.

	*callbacks.c (cb_hide_process): show the dialog if needed.

2001-07-16 Kevin Vandersloot <kfv101@psu.edu>

	*interface.c: make the menu keyboard shortcuts use CTRL

2001-07-16 Kevin Vandersloot <kfv101@psu.edu>

	*interface.c (create_main_window): put cpu/mem/swap progress
	meters on a faster timeout.

	*callbacks.[c,h] (cb_progress_meter_timeout): new callback
	for cpu/mem/swap timeout

	*proctable.c (proctable_update_progress_meters): new function
	to update the progress meters.

2001-07-16 Kevin Vandersloot <kfv101@psu.edu>

	*procman.h: add config option to not show icons. Speeds up
	load time.

	*procman.c (main): move a bunch of prettytable stuff into
	prettytable.c where it belongs.

	*prettytable.c (prettytable_get[icon,name]): check if the hash
	table exists. If not then it means icons should not be shown.

2001-07-16 Kevin Vandersloot <kfv101@psu.edu>

	*favorites.c: add dialog to edit hidden processes.

	*proctable.c (update_info): add a little logic to show
	a process that was hidden but now needs to be shown.

	*procman.h: add a gint to ProcData structure indicating the number
	of blacklisted processes

	*interface.c: add menuitem to edit blacklist

	*callbacks.c (cb_show_hidden_processes): add callback to edit 
	blacklist menu

2001-07-14  Carlos Perelló Marín <carlos@gnome-db.org>

	* src/memmaps.c: Added #include config.h to enable i18n
	src/procdialogs.c: ditto.
	
2001-07-14  Carlos Perelló Marín <carlos@gnome-db.org>

	* infoview.c: Added #include config.h to enable i18n
	* interface.c: /s/lessinfolabel/_(lessinfolabel)/
	/s/moreinfolabel/_(moreinfolabel)/ to get those labels translated.
	* Changelog: Renamed to the standard name ChangeLog

2001-07-12 Kevin Vandersloot <kfv101@psu.edu>

	For now don't do the favorites. Instead make a blacklist
	of processes the user don't want to see. I think this is
	more useful than defining favorites.

	*proctable.c: remove favorites for now since I'm not sure
	if it is usefule. Instead there will be a blacklist of
	processes that the user doesn't want to see.

	*favorites.c: add stuff for blacklisting processes similar to
	favorites stuff.

	*interface.c: comment out the favorite menus. Add a hide option
	to the edit menu.

	*callbacks.[c,h] (cb_hide_process): new callback to hide a 
	process.

	*procman.c: initialize the blacklist, save it at end of session.

	*procman.h: add the blacklist GList to ProcData structure.

	*proctable.c (update_info): add some comments to this ever 
	increasingly complicated function.

2001-07-12 Kevin Vandersloot <kfv101@psu.edu>

	*proctable.c (proctable_update_list): change the check
	to a case statement for which processes to view to fix
	a bug where only the user processes were shown.

2001-07-12 Kevin Vandersloot <kfv101@psu.edu>

	Added the beginnings of showing only favorite processes

	*procman.h: add enum for favorites

	*interface.c: added view: favorites menu item and add to
	favorites menu item.

	*callbacks.c (cb_add_to_favorites, cb_favorites_menu_clicked) :
	respond to new menu items.

	*procman.c (procman_data_new): initialize the favorites list.
	(procman_save_config): save the favorites.

	*proctable.c (insert_info_to_tree): check to see if process
	is a favorite.
	(proctable_update_list): add check to see if showing favorites
	and show all processes if so.

	*favorites.[c,h]: implement adding, saving, and checking for
	favorites.

	*Makefile.am: add favorites.[c,h]

2001-07-11 Kevin Vandersloot <kfv101@psu.edu>

	Added the ability to only view running processes.

	*procman.h: add enum for running processes.

	*proctable.c (get_process_status): added new boolean indicating
	whether the process is running or not
	(update_info): change this function to return an int. Return
	-1 if process needs to be removed, 0 if nothing, and 1 if it
	needs to be added.
	(insert_info_to_tree): only add to tree if needed
	(refresh_list): add or remove processes using return value
	from update_info.
	Also initialize info->node to be NULL since we can now maintain
	a processes info yet not necessarily display it.

	*interface.c (create_main_window): add a view: running_processes
	menu.

	*callbacks.c: add the necessary callbacks to the menus.

2001-07-11 Kevin Vandersloot <kfv101@psu.edu>

	*proctable.c, memmaps.c: hack around a bug in gal.
	Some more cosmetic changes.

2001-07-11 Kevin Vandersloot <kfv101@psu.edu>

	*prettytable.c: remove some unneeded stuff

	*proctable.c (update_info): free the string if it exists to
	fix a memory leak.

2001-07-10 Kevin Vandersloot <kfv101@psu.edu>

	*proctable.c (proctable_new): check to see that the tree
	is created from the spec file and bail out if not.

	*memmaps.c (create_memmaps_tree): do the same here. Thus things
	work properly now and procman is stable once more. Ahhh.

	*proctable.etspec, memmaps.etspec: update initial default column
	widths and add memmaps.etspec

2001-07-10 Kevin Vandersloot <kfv101@psu.edu>

	*memmaps.c: put in same conditionals to load memmaps.etspec.
	It seems a bug in gal is causeing the crashes.

	*Makefile.am: add memmaps.etspec.

2001-07-09 Kevin Vandersloot <kfv101@psu.edu>

	Beginning to move e-tree specs to different file. Thanks to 
	Carlos Perello Marin <carlos@gnome-db.org> for
	providing the initial patch.

	*interface.c (create_main_window): more cosmetic changes.

	*Makefile.am: add proctable.etspec. Beginning of attempt
	to move the spec into a different file for 
	internationalization purposes.

	*proctable.c: put in if statement to open spec from a 
	different file. Seems to crash and burn when I try though.
	Change justification to center for most of the items.

2001-07-09 Kevin Vandersloot <kfv101@psu.edu>

	*interface.c (create_main_window): change signal for info
	button to clicked instead of pressed so it works using the 
	keyboard. 
	Also make the More Info and Less Info labels saner
	and make sure if the info is already shown at startup set the
	label to Less Info.
	Some cosmetic inprovements to the progress meters.

2001-07-08 Kevin Vandersloot <kfv101@psu.edu>

	*proctable.c: add process status column

	*procman.c: change default to show tree_view

2001-07-08 Kevin Vandersloot <kfv101@psu.edu>

	*proctable.c (inset_info_to_tree): comment out the call
	to not expand the parent node. I think this might be
	causing a crash. Also add the term (thread) to any thread
	processes.

	*interface.c(create_main_window), infoview.c: instead of 
	setting certain widgets insensitive at startup, just send 
	an "unselect" signal.

	*interface.c: add menu items for renice and memory maps.

	*memmaps.c: changed cmd_label to command_label since I used
	the same variable in the infoview.

	*memmaps.c (create_memmaps_dialog): check to see if dialog
	already exists. Don't show two dialogs.

2001-07-07 Kevin Vandersloot <kfv101@psu.edu>

	*infoview.c (infoview_create): much improved info viewer

	*procman.h: removed infoview structure. Now the widgets are
	accessed as global variables deffined in infoview.c

	*procman.h: added new configuration variable to show the tree. 
	No UI to change it but one can do that in the .gnome 
	configuration file.

	*proctable.c (insert_info_to_tree): Use the new configration
	variable to show the tree. Also check to see if parent process
	has same memory total as well as same name to deterimine if it
	is a thread.

2001-07-05 Kevin Vandersloot <kfv101@psu.edu>

	*proctable.c (remove_children_from_tree): remove the 
	e_tree_memory_node_remove call as it seems to cause some
	infinite looping.

	*also remove some c++ comments

2001-07-05 Kevin Vandersloot <kfv101@psu.edu>

	*prettytable.c (pretty_table_load_path): don't segfault if the
	directory doesn't exist

2001-07-04 Kevin Vandersloot <kfv101@psu.edu>

	*proctable.c(remove_children_from_tree): new function to
	remove all child info if a parent process is removed.

	*proctable.c (remove_info_from_tree): new function to remove
	a process.

	*interface.c (create_main_window): change gtk_wdiget_show to
	gtk_widget_show_all to fix a bug where the infoview state was
	not persistent

	*memmaps.c (get_memmaps_list): add e_tree_memory_freeze and thaw
	to inprove table updating. Add glibtop_free to fix a major
	memory leak.

	*memmaps.c (create_memmaps_dialog): change timeout to be 5 sec. This
	should probably not be hard coded.

	*procman.c (main): remove the push visual and colormap since
	I don't know what use they are for.

	*procman.h, proctable.c: change ETreePath *path to ETreePath path
	since they should not be declared as pointers.

	*proctable.c (proctable_new): make tree default to being expanded.

2001-07-03 Kevin Vandersloot <kfv101@psu.edu>

	*memmaps.[c,h]: create and handle the memmaps dialog. Lots
	of code stolen from gtop

	*callback.s (cb_table_selected): call update memmaps function

	*infoview.c (memmaps_button_click): open the dialog

	*procman.c (procman_data_new, procman_get_save_files): add config
	file for the memmaps e-tree

	*procman.h: added memmaps config file name to config structure

	*proctable.c (update_all): call update memmaps function

	*proctable.c: changed e-tree spec to "single" selection mode so
	only one row can be selected

	*infoview.c (infoview_update): don't duplicate strings for entry
	widgets. This leaks memory.

2001-06-30 Kevin Vandersloot <kfv101@psu.edu>

	*proctable.c (insert_info_to_tree): check to see if parent has
	same name. If so assume the child is a thread and don't expand
	the row.

	*proctable.c: renamed get_parent_node to get_parent and return
	parent info in order to check the name

	* some other code cleanups

2001-06-30 Kevin Vandersloot <kfv101@psu.edu>

	*interface.c (update_sensitivity): more movement of code
	to interface.c.

	*callbacks.c (cb_table_slected): use update_sensitivity. Move 
	cb_update_selected_row into cb_table_selected.
	
	*proctable.c: remove some unused variables, fix up %cpu.

2001-06-30 Kevin Vandersloot <kfv101@psu.edu>

	* callbacks.c (cb_double_click): hook up to double click.
	Now toggles infoview

	* interface.c (toggle_infoview): toggles infoview. Beginning of 
	pulling stuff out of callbacks.c to access gtk widgets as global
	variables.
